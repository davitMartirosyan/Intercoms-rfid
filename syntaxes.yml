{
    do {
      Get Result Set
      while (Get Result) {
        Process Result
      }
    } while (Get More Result Sets);


    stmt->execute("SELECT * FROM intercoms");
    std::unique_ptr<sql::ResultSet> res;
    // std::unique_ptr<sql::ResultSet> res(stmt->executeQuery("SELECT * FROM domofon"));
    // cout << "ID"
    do
    {
        res.reset(stmt->getResultSet());
        while(res->next())
        {
            cout << res->getInt("id") << " " 
                << res->getString("qusers") << " "
                << res->getString("addr") << " " << endl;
        }
    } while (stmt->getMoreResults());
}


    string url(argc >= 2 ? argv[1] : HOST);
    const string user(argc >= 3 ? argv[2] : USER);
    const string pass(argc >= 4 ? argv[3] : PASS);
    const string database(argc >= 5 ? argv[4] : DB);
    cout << "Connector/C++ tutorial framework..." << endl;
    cout << endl;

stmt->execute("SELECT * FROM intercoms");
// std::unique_ptr<sql::ResultSet> res;
// // std::unique_ptr<sql::ResultSet> res(stmt->executeQuery("SELECT * FROM domofon"));
// // cout << "ID"
// do
// {
//     res.reset(stmt->getResultSet());
//     while(res->next())
//     {
//         cout << res->getInt("id") << " " 
//              << res->getString("qusers") << " "
//              << res->getString("addr") << " " << endl;
//     }
// } while (stmt->getMoreResults());


  sql::Driver* driver = get_driver_instance();
        std::unique_ptr<sql::Connection> con(driver->connect(url, user, pass));
        con->setSchema(database);
        std::unique_ptr<sql::Statement> stmt(con->createStatement());
